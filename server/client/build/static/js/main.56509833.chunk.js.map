{"version":3,"sources":["actions/index.js","actions/types.js","components/Payments.js","components/Header.js","components/Landing.js","components/surveys/SurveyList.js","components/Dashboard.js","components/surveys/SurveyField.js","utils/validateEmails.js","components/surveys/formFields.js","components/surveys/SurveyForm.js","components/surveys/SurveyFormReview.js","components/surveys/SurveyNew.js","components/App.js","reducers/index.js","reducers/authReducer.js","reducers/surveysReducer.js","index.js"],"names":["fetchUser","dispatch","a","axios","get","res","type","payload","data","handleToken","token","post","submitSurvey","values","history","push","fetchSurveys","Payments","name","description","amount","props","stripeKey","process","className","Component","connect","actions","Header","this","auth","href","key","style","margin","credits","to","renderContent","Landing","textAlign","SurveyList","surveys","reverse","map","survey","_id","title","body","Date","dateSent","toLocaleDateString","yes","no","renderSurveys","Dashboard","input","label","meta","error","touched","marginBottom","re","noValueErrorMessage","SurveyForm","_","formFields","Field","component","SurveyField","onSubmit","handleSubmit","onSurveySubmit","renderFields","reduxForm","validate","errors","recipients","emails","invalidEmails","split","email","trim","filter","test","length","validateEmails","each","form","destroyOnUnmount","state","formValues","surveyForm","withRouter","onCancel","reviewFields","onClick","SurveyNew","showFormReview","setState","App","exact","path","combineReducers","action","window","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","querySelector"],"mappings":"4eAIaA,EAAY,yDAAM,WAAMC,GAAN,eAAAC,EAAA,sEACTC,IAAMC,IAAI,qBADD,OACrBC,EADqB,OAE3BJ,EAAS,CAAEK,KCNW,aDMOC,QAASF,EAAIG,OAFf,2CAAN,uDAKZC,EAAc,SAACC,GAAD,8CAAW,WAAMT,GAAN,eAAAC,EAAA,sEAChBC,IAAMQ,KAAK,cAAeD,GADV,OAC5BL,EAD4B,OAElCJ,EAAS,CAAEK,KCXW,aDWOC,QAASF,EAAIG,OAFR,2CAAX,uDAKdI,EAAe,SAACC,EAAOC,GAAR,8CAAoB,WAAMb,GAAN,eAAAC,EAAA,sEAC1BC,IAAMQ,KAAK,eAAgBE,GADD,OACtCR,EADsC,OAE5CS,EAAQC,KAAK,YACbd,EAAS,CAAEK,KCjBW,aDiBOC,QAASF,EAAIG,OAHE,2CAApB,uDAMfQ,EAAe,yDAAM,WAAMf,GAAN,eAAAC,EAAA,sEACZC,IAAMC,IAAI,gBADE,OACxBC,EADwB,OAE9BJ,EAAS,CAAEK,KCrBc,gBDqBOC,QAASF,EAAIG,OAFf,2CAAN,uD,kBEftBS,E,uKACO,IAAD,OAEJ,OACI,kBAAC,IAAD,CACIC,KAAM,SACNC,YAAY,wBACZC,OAAQ,IACRV,MAAO,SAAAA,GAAK,OAAI,EAAKW,MAAMZ,YAAYC,IACvCY,UAAWC,8CAEX,4BAAQC,UAAU,OAAlB,oB,GAXOC,aAqBRC,cAAQ,KAAMC,EAAdD,CAAwBT,GCrBjCW,E,8KAGE,OAAQC,KAAKR,MAAMS,MACf,KAAK,KACD,OACJ,KAAK,EACD,OAAO,4BAAI,uBAAGC,KAAK,gBAAR,sBACf,QACI,MAAO,CACH,wBAAIC,IAAI,KAAK,kBAAC,EAAD,OACb,wBAAIA,IAAI,IAAIC,MAAO,CAAEC,OAAQ,WAA7B,WACaL,KAAKR,MAAMS,KAAKK,SAE7B,wBAAIH,IAAI,KAAI,uBAAGD,KAAK,eAAR,e,+BAMxB,OACI,6BACI,yBAAKP,UAAU,eACX,kBAAC,IAAD,CAAMY,GAAIP,KAAKR,MAAMS,KAAO,WAAa,IACrCN,UAAU,mBADd,UAKA,wBAAIA,UAAU,SACTK,KAAKQ,uB,GA7BTZ,aAwCNC,mBAHf,YACI,MAAO,CAAEI,KADsB,EAARA,QAGZJ,CAAyBE,GChCzBU,EAXC,WACZ,OACI,yBAAKL,MAAO,CAAEM,UAAW,WACrB,uCADJ,qCCCFC,E,kLAEEX,KAAKR,MAAML,iB,sCAIX,OAAOa,KAAKR,MAAMoB,QAAQC,UAAUC,KAAI,SAAAC,GACpC,OAEI,yBAAKpB,UAAU,aAAaQ,IAAKY,EAAOC,KACpC,yBAAKrB,UAAU,gBACX,0BAAMA,UAAU,cAAcoB,EAAOE,OACrC,2BACKF,EAAOG,MAEZ,uBAAGvB,UAAU,SAAb,YACc,IAAIwB,KAAKJ,EAAOK,UAAUC,uBAG5C,yBAAK1B,UAAU,eACX,kCAAQoB,EAAOO,IAAf,SAA0BP,EAAOQ,W,+BAUjD,OACI,6BACKvB,KAAKwB,qB,GAhCG5B,aA2CVC,mBAJf,YACI,MAAO,CAAEe,QADyB,EAAXA,WAIa,CAAEzB,gBAA3BU,CAA2Cc,GCjC3Cc,EAXG,WACd,OACI,6BACI,kBAAC,EAAD,MACA,yBAAK9B,UAAU,oBACX,kBAAC,IAAD,CAAMY,GAAG,cAAcZ,UAAU,8BAC7B,uBAAGA,UAAU,kBAAb,W,mCCRL,cAAiD,IAA9C+B,EAA6C,EAA7CA,MAAOC,EAAsC,EAAtCA,MAAsC,IAA/BC,KAAQC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,QAC3C,OACI,6BACI,+BAAQH,GACR,0BAAWD,GACX,yBAAK/B,UAAU,WAAWS,MAAO,CAAE2B,aAAc,QAC5CD,GAAWD,KCRtBG,EAAK,4ECAI,GACX,CAAEL,MAAO,eAAgBtC,KAAM,QAAS4C,oBAAqB,6BAC7D,CAAEN,MAAO,gBAAiBtC,KAAM,UAAW4C,oBAAqB,+BAChE,CAAEN,MAAO,aAActC,KAAM,OAAQ4C,oBAAqB,sCAC1D,CAAEN,MAAO,iBAAkBtC,KAAM,aAAc4C,oBAAqB,6CCKlEC,E,6KAEE,OAAOC,IAAErB,IAAIsB,GAAY,YAAsB,IAAnBT,EAAkB,EAAlBA,MAAOtC,EAAW,EAAXA,KAC/B,OAAQ,kBAACgD,EAAA,EAAD,CAAOlC,IAAKd,EAAMsC,MAAOA,EAAOlD,KAAK,OAAOY,KAAMA,EAAMiD,UAAWC,S,+BAQ/E,OACI,6BACI,0BAAMC,SAAUxC,KAAKR,MAAMiD,aAAazC,KAAKR,MAAMkD,iBAC9C1C,KAAK2C,eACN,kBAAC,IAAD,CAAMpC,GAAG,WAAWZ,UAAU,2BAA9B,UAGA,4BAAQlB,KAAK,SAASkB,UAAU,kCAAhC,OAEA,uBAAGA,UAAU,wBAAb,e,GApBKC,aA4CVgD,kBAAU,CACrBC,SAhBJ,SAAkB7D,GACd,IAAM8D,EAAS,GAUf,OATAA,EAAOC,WFvCI,SAACC,GACZ,IAAMC,EAAgBD,EACjBE,MAAM,KACNpC,KAAI,SAAAqC,GAAK,OAAIA,EAAMC,UACnBC,QAAO,SAAAF,GAAK,OAAuB,IAAnBnB,EAAGsB,KAAKH,MAE7B,GAAIF,EAAcM,OACd,MAAM,8BAAN,OAAqCN,GEgCrBO,CAAexE,EAAO+D,YAAc,IAExDZ,IAAEsB,KAAKrB,GAAY,YAAoC,IAAjC/C,EAAgC,EAAhCA,KAAM4C,EAA0B,EAA1BA,oBACnBjD,EAAOK,KACRyD,EAAOzD,GAAQ4C,MAKhBa,GAMPY,KAAM,aACNC,kBAAkB,GAHPf,CAOZV,GCbYrC,mBANf,SAAyB+D,GACrB,MAAO,CACHC,WAAYD,EAAMF,KAAKI,WAAW9E,UAIFc,EAAzBD,CAAkCkE,aAxCxB,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,SAAUH,EAAsC,EAAtCA,WAAW9E,EAA2B,EAA3BA,aAAaE,EAAc,EAAdA,QACpDgF,EAAe9B,IAAErB,IAAIsB,GAAY,YAAsB,IAAnB/C,EAAkB,EAAlBA,KAAMsC,EAAY,EAAZA,MAC5C,OACI,yBAAKxB,IAAKd,GACN,+BAAQsC,GACR,6BACKkC,EAAWxE,QAM5B,OACI,6BACI,2DACC4E,EACD,4BACItE,UAAU,sCACVuE,QAASF,GAFb,QAOA,4BACIE,QAAS,kBAAMnF,EAAa8E,EAAW5E,IACvCU,UAAU,mCAFd,cAKI,uBAAGA,UAAU,wBAAb,eC7BVwE,E,4MAEFP,MAAQ,CAAEQ,gBAAgB,G,8DACT,IAAD,OACZ,OAAIpE,KAAK4D,MAAMQ,eACH,kBAAC,EAAD,CACJJ,SAAU,kBAAM,EAAKK,SAAS,CAAED,gBAAgB,OAGhD,kBAAC,EAAD,CACJ1B,eAAgB,kBAAM,EAAK2B,SAAS,CAAED,gBAAgB,S,+BAK1D,OACI,6BACKpE,KAAKQ,qB,GAjBEZ,aAuBTgD,cAAU,CACrBc,KAAM,cADKd,CAEZuB,GCpBGG,E,kLAGEtE,KAAKR,MAAMrB,c,+BAIX,OACI,6BACI,kBAAC,IAAD,KACI,yBAAKwB,UAAU,aACX,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAO4E,OAAK,EAACC,KAAK,IAAIlC,UAAW7B,IACjC,kBAAC,IAAD,CAAO8D,OAAK,EAACC,KAAK,WAAWlC,UAAWb,IACxC,kBAAC,IAAD,CAAO+C,KAAK,eAAelC,UAAW6B,W,GAd5CvE,aAsBHC,cAAQ,KAAMC,EAAdD,CAAuByE,G,SC5BvBG,cAAgB,CAC3BxE,KCJW,WAAiC,IAAvB2D,EAAsB,uDAAd,KAAMc,EAAQ,uCAE3C,OAAQA,EAAOjG,MACX,IdLkB,acMd,OAAOiG,EAAOhG,UAAW,EAE7B,QACI,OAAOkF,IDFfF,KAAMd,IACNhC,QENW,WAA8B,IAApBgD,EAAmB,uDAAZ,GAAIc,EAAQ,uCACxC,OAAQA,EAAOjG,MACX,IfHqB,gBeIjB,OAAOiG,EAAOhG,QAElB,QACI,OAAOkF,MCInBe,OAAOrG,MAAQA,IAEf,IAAMsG,EAAQC,YAAYC,EAAU,GAAIC,YAAgBC,MAExDC,IAASC,OACL,kBAAC,IAAD,CAAUN,MAAOA,GAAQ,kBAAC,EAAD,OACzBO,SAASC,cAAc,Y","file":"static/js/main.56509833.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { FETCH_USER } from './types';\r\nimport { FETCH_SURVEYS } from './types';\r\n\r\nexport const fetchUser = () => async dispatch => {\r\n    const res = await axios.get('/api/current_user');\r\n    dispatch({ type: FETCH_USER, payload: res.data });\r\n};\r\n\r\nexport const handleToken = (token) => async dispatch => {\r\n    const res = await axios.post('/api/stripe', token);\r\n    dispatch({ type: FETCH_USER, payload: res.data });\r\n};\r\n\r\nexport const submitSurvey = (values,history) => async dispatch => {\r\n    const res = await axios.post('/api/surveys', values);\r\n    history.push('/surveys');\r\n    dispatch({ type: FETCH_USER, payload: res.data });\r\n};\r\n\r\nexport const fetchSurveys = () => async dispatch =>{\r\n    const res = await axios.get('/api/surveys');\r\n    dispatch({ type: FETCH_SURVEYS, payload: res.data });\r\n};","export const FETCH_USER = 'fetch_user';\r\nexport const FETCH_SURVEYS = 'fetch_surveys';","import React, { Component } from 'react';\r\nimport StripeCheckout from 'react-stripe-checkout';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions';\r\n\r\nclass Payments extends Component{\r\n    render(){\r\n\r\n        return (\r\n            <StripeCheckout\r\n                name =\"Emaily\"\r\n                description=\"$5 or 5 email credits\"\r\n                amount={500}\r\n                token={token => this.props.handleToken(token)}\r\n                stripeKey={process.env.REACT_APP_STRIPE_KEY}\r\n            >\r\n                <button className=\"btn\">\r\n                    Add credits\r\n                </button>\r\n\r\n            </StripeCheckout>\r\n        \r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, actions) (Payments);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Payments from './Payments'\r\n\r\nclass Header extends Component {\r\n\r\n    renderContent() {\r\n        switch (this.props.auth) {\r\n            case null:\r\n                return;\r\n            case false:\r\n                return <li><a href=\"/auth/google\">Login with Google</a></li>;\r\n            default:\r\n                return [\r\n                    <li key=\"1\" ><Payments /></li>,\r\n                    <li key=\"3\" style={{ margin: '0 10px' }}>\r\n                        Credits:{this.props.auth.credits}\r\n                    </li>,\r\n                    <li key=\"2\"><a href=\"/api/logout\">Logout</a></li>\r\n                ];\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <nav>\r\n                <div className=\"nav-wrapper\">\r\n                    <Link to={this.props.auth ? '/surveys' : '/'}\r\n                        className=\"left brand-logo\"\r\n                    >\r\n                        Emaily\r\n                     </Link>\r\n                    <ul className=\"right\">\r\n                        {this.renderContent()}\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ auth }) {\r\n    return { auth };\r\n}\r\nexport default connect(mapStateToProps)(Header);","import React from 'react';\r\n\r\nconst Landing = () => {\r\n    return (\r\n        <div style={{ textAlign: 'center' }}>\r\n            <h1>\r\n                Emaily!\r\n            </h1>\r\n            collect feedback from your users\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Landing;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchSurveys } from '../../actions';\r\n\r\n\r\nclass SurveyList extends Component {\r\n    componentDidMount() {\r\n        this.props.fetchSurveys();\r\n    }\r\n\r\n    renderSurveys() {\r\n        return this.props.surveys.reverse().map(survey => {\r\n            return (\r\n\r\n                <div className=\"card white\" key={survey._id}>\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">{survey.title}</span>\r\n                        <p>\r\n                            {survey.body}\r\n                        </p>\r\n                        <p className=\"right\">\r\n                            Sent On: {new Date(survey.dateSent).toLocaleDateString()}\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"card-action\">\r\n                        <p>Yes:{survey.yes} - No:{survey.no}</p>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            );\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderSurveys()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps({ surveys }) {\r\n    return { surveys };\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchSurveys })(SurveyList);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SurveyList from './surveys/SurveyList';\r\n\r\nconst Dashboard = () => {\r\n    return (\r\n        <div>\r\n            <SurveyList />\r\n            <div className=\"fixed-action-btn\">\r\n                <Link to=\"surveys/new\" className=\"btn-floating btn-large red\">\r\n                    <i className=\"material-icons\">add</i>\r\n                </Link>\r\n            </div>\r\n        </div>);\r\n};\r\nexport default Dashboard;","import React from 'react';\r\n\r\nexport default ({ input, label, meta: { error, touched } }) => {\r\n    return (\r\n        <div>\r\n            <label>{label}</label>\r\n            <input {...input} />\r\n            <div className=\"red-text\" style={{ marginBottom: '5px' }}>\r\n                {touched && error}\r\n            </div>\r\n        </div>\r\n    );\r\n};","const re = /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\nexport default (emails) => {\r\n    const invalidEmails = emails\r\n        .split(',')\r\n        .map(email => email.trim())\r\n        .filter(email => re.test(email) === false);\r\n\r\n    if (invalidEmails.length) {\r\n        return `Theses emails are invalid: ${invalidEmails}`;\r\n    }\r\n};","export default [\r\n    { label: 'Survey Title', name: 'title', noValueErrorMessage: 'You must provide a title!' },\r\n    { label: 'Email Subject', name: 'subject', noValueErrorMessage: 'You must provide a subject!' },\r\n    { label: 'Email Body', name: 'body', noValueErrorMessage: 'You must provide an email message!' },\r\n    { label: 'Recipient List', name: 'recipients', noValueErrorMessage: 'You must provide at least one recipient!' }\r\n];\r\n","import _ from 'lodash';\r\nimport React, { Component } from 'react';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { Link } from 'react-router-dom'\r\nimport SurveyField from './SurveyField';\r\nimport validateEmails from '../../utils/validateEmails'\r\nimport formFields from './formFields'\r\n\r\n\r\nclass SurveyForm extends Component {\r\n    renderFields() {\r\n        return _.map(formFields, ({ label, name }) => {\r\n            return (<Field key={name} label={label} type=\"text\" name={name} component={SurveyField} />);\r\n        }\r\n        );\r\n    }\r\n\r\n    //no parentheses in this.props.onSurveySubmit(no \"this.props.onSurveySubmit()\") to call  this function(or javascript interpreter) and not the callback function\r\n    //we want to only call the function after the user submitted or attemps to dismiss the form. And to call  the second\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.props.handleSubmit(this.props.onSurveySubmit)}>\r\n                    {this.renderFields()}\r\n                    <Link to=\"/surveys\" className=\"red btn-flat white-text\">\r\n                        Cancel\r\n                    </Link>\r\n                    <button type=\"submit\" className=\"teal btn-flat right white-text\">\r\n                        Next\r\n                    <i className=\"material-icons right\">done</i>\r\n                    </button>\r\n                </form>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction validate(values) {\r\n    const errors = {};\r\n    errors.recipients = validateEmails(values.recipients || ''); //empty string to avoid error (cannot read property split of undefined)\r\n\r\n    _.each(formFields, ({ name, noValueErrorMessage }) => {\r\n        if (!values[name]) {\r\n            errors[name] = noValueErrorMessage;\r\n        }\r\n    });\r\n\r\n\r\n    return errors;\r\n}\r\n\r\n//initialize survey\r\nexport default reduxForm({\r\n    validate,\r\n    form: 'surveyForm',\r\n    destroyOnUnmount: false //the form with its entered inputs are not deleted when  they are not displayed in the web browser. \r\n    //In this case, when go back to surveys/new after clicking on the back button(cf. SurveyFormReview.js), \r\n    //the entered values (and the form) are still in the survey fields. \r\n    //With \"true\", form is destroyed  and not displayed after clicking on the back button\r\n})(SurveyForm);","import _ from 'lodash';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport formFields from './formFields'\r\nimport {withRouter} from 'react-router-dom';\r\nimport * as actions from '../../actions';\r\n\r\nconst SurveyFormReview = ({ onCancel, formValues,submitSurvey,history }) => {\r\n    const reviewFields = _.map(formFields, ({ name, label }) => {\r\n        return (\r\n            <div key={name}>\r\n                <label>{label}</label>\r\n                <div>\r\n                    {formValues[name]}\r\n                </div>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <h5>Please confirm your entries</h5>\r\n            {reviewFields}\r\n            <button\r\n                className=\"yellow darken-3 btn-flat white-text\"\r\n                onClick={onCancel}\r\n            >\r\n                Back\r\n            </button>\r\n\r\n            <button\r\n                onClick={() => submitSurvey(formValues,history)} \r\n                className=\"green btn-flat right white-text\"\r\n            >\r\n                Send Survey\r\n                <i className=\"material-icons right\">email</i>\r\n            </button>\r\n        </div >\r\n    );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        formValues: state.form.surveyForm.values\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, actions)(withRouter(SurveyFormReview));","//shows surveyForm and surveyReview\r\nimport React, { Component } from 'react';\r\nimport { reduxForm } from 'redux-form';\r\nimport SurveyForm from './SurveyForm';\r\nimport SurveyFormReview from './SurveyFormReview';\r\n\r\nclass SurveyNew extends Component {\r\n\r\n    state = { showFormReview: false };\r\n    renderContent() {\r\n        if (this.state.showFormReview) {\r\n            return (<SurveyFormReview\r\n                onCancel={() => this.setState({ showFormReview: false })}\r\n            />);\r\n        }\r\n        return (<SurveyForm\r\n            onSurveySubmit={() => this.setState({ showFormReview: true })}\r\n        />);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderContent()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'surveyForm'\r\n})(SurveyNew);\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport * as actions from '../actions';\r\nimport Header from './Header';\r\nimport Landing from './Landing';\r\nimport Dashboard from './Dashboard';\r\nimport SurveyNew from './surveys/SurveyNew';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\nclass App extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchUser();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <BrowserRouter>\r\n                    <div className=\"container\">\r\n                        <Header />\r\n                        <Route exact path=\"/\" component={Landing} />\r\n                        <Route exact path=\"/surveys\" component={Dashboard} />\r\n                        <Route path=\"/surveys/new\" component={SurveyNew} />\r\n                    </div>\r\n                </BrowserRouter>\r\n            </div>\r\n        );\r\n    }\r\n\r\n};\r\nexport default connect(null, actions)(App);","import { combineReducers } from 'redux';\r\nimport { reducer as reduxForm} from 'redux-form';\r\nimport authReducer from './authReducer';\r\nimport surveysReducer from './surveysReducer';\r\n\r\nexport default combineReducers({\r\n    auth: authReducer,\r\n    form: reduxForm,\r\n    surveys: surveysReducer\r\n});","import { FETCH_USER } from '../actions/types';\r\n\r\nexport default function (state = null, action) {\r\n\r\n    switch (action.type) {\r\n        case FETCH_USER:\r\n            return action.payload || false; \r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { FETCH_SURVEYS} from '../actions/types';\r\n\r\nexport default function (state =[], action) {\r\n    switch (action.type) {\r\n        case FETCH_SURVEYS:\r\n            return action.payload;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import 'materialize-css/dist/css/materialize.min.css'\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport reduxThunk from 'redux-thunk'\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\nimport axios from 'axios';\r\nwindow.axios = axios;\r\n\r\nconst store = createStore(reducers, {}, applyMiddleware(reduxThunk));\r\n\r\nReactDOM.render(\r\n    <Provider store={store} ><App /></Provider>,\r\n    document.querySelector('#root')\r\n);\r\n"],"sourceRoot":""}