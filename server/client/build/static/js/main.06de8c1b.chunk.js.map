{"version":3,"sources":["actions/index.js","actions/types.js","components/Payments.js","components/Header.js","components/Landing.js","components/App.js","reducers/index.js","reducers/authReducer.js","index.js"],"names":["fetchUser","dispatch","a","axios","get","res","type","payload","data","handleToken","token","post","Payments","name","description","amount","props","stripeKey","process","className","Component","connect","actions","Header","this","auth","href","key","style","margin","credits","to","renderContent","Landing","textAlign","Dashboard","SurveyNew","App","exact","path","component","combineReducers","state","action","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","querySelector"],"mappings":"8ZAIaA,EAAY,yDAAM,WAAMC,GAAN,eAAAC,EAAA,sEACTC,IAAMC,IAAI,qBADD,OACrBC,EADqB,OAE3BJ,EAAS,CAAEK,KCNW,aDMOC,QAASF,EAAIG,OAFf,2CAAN,uDAKZC,EAAc,SAACC,GAAD,8CAAW,WAAMT,GAAN,eAAAC,EAAA,sEAChBC,IAAMQ,KAAK,cAAeD,GADV,OAC5BL,EAD4B,OAElCJ,EAAS,CAAEK,KCXW,aDWOC,QAASF,EAAIG,OAFR,2CAAX,uDEJrBI,E,uKACO,IAAD,OAEJ,OACI,kBAAC,IAAD,CACIC,KAAM,SACNC,YAAY,wBACZC,OAAQ,IACRL,MAAO,SAAAA,GAAK,OAAI,EAAKM,MAAMP,YAAYC,IACvCO,UAAWC,8CAEX,4BAAQC,UAAU,OAAlB,oB,GAXOC,aAqBRC,cAAQ,KAAMC,EAAdD,CAAwBT,GCrBjCW,E,8KAGE,OAAQC,KAAKR,MAAMS,MACf,KAAK,KACD,OACJ,KAAK,EACD,OAAO,4BAAI,uBAAGC,KAAK,gBAAR,sBACf,QACI,MAAO,CACH,wBAAIC,IAAI,KAAK,kBAAC,EAAD,OACb,wBAAIA,IAAI,IAAIC,MAAO,CAAEC,OAAQ,WAA7B,WACaL,KAAKR,MAAMS,KAAKK,SAE7B,wBAAIH,IAAI,KAAI,uBAAGD,KAAK,eAAR,e,+BAiBxB,OACI,6BACI,yBAAKP,UAAU,eACX,kBAAC,IAAD,CAAMY,GAAIP,KAAKR,MAAMS,KAAO,WAAa,IACrCN,UAAU,mBADd,UAKA,wBAAIA,UAAU,SACTK,KAAKQ,uB,GAxCTZ,aAyDNC,mBAHf,YACI,MAAO,CAAEI,KADsB,EAARA,QAGZJ,CAAyBE,GCjDzBU,EAXC,WACZ,OACI,yBAAKL,MAAO,CAAEM,UAAW,WACrB,uCADJ,qCCGFC,EAAY,kBAAM,0CAClBC,EAAY,kBAAM,0CAGlBC,E,kLAGEb,KAAKR,MAAMhB,c,+BAIX,OACI,6BACI,kBAAC,IAAD,KACI,yBAAKmB,UAAU,aACX,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOmB,OAAK,EAACC,KAAK,IAAIC,UAAWP,IACjC,kBAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,WAAWC,UAAWL,IACxC,kBAAC,IAAD,CAAOI,KAAK,eAAeC,UAAWJ,W,GAd5ChB,aAsBHC,cAAQ,KAAMC,EAAdD,CAAuBgB,GC9BvBI,cAAgB,CAC3BhB,KCFW,WAAiC,IAAvBiB,EAAsB,uDAAd,KAAMC,EAAQ,uCAoB3C,OAAQA,EAAOrC,MACX,INvBkB,aMyBd,OAAOqC,EAAOpC,UAAW,EAI7B,QACI,OAAOmC,MClBbE,EAAQC,YAAYC,EAAU,GAAIC,YAAgBC,MAExDC,IAASC,OACL,kBAAC,IAAD,CAAUN,MAAOA,GAAQ,kBAAC,EAAD,OACzBO,SAASC,cAAc,Y","file":"static/js/main.06de8c1b.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { FETCH_USER } from './types';\r\n//response from localhost:5000/api/current_user  that contains user data \r\n//(to know if user logs in otherwise user data is null/empty if user logs out)is stored in payload of fetchUser\r\nexport const fetchUser = () => async dispatch => {\r\n    const res = await axios.get('/api/current_user');\r\n    dispatch({ type: FETCH_USER, payload: res.data });\r\n};\r\n\r\nexport const handleToken = (token) => async dispatch => {\r\n    const res = await axios.post('/api/stripe', token);\r\n    dispatch({ type: FETCH_USER, payload: res.data });\r\n};\r\n\r\n//equivalent to\r\n// export const fetchUser = () => {\r\n//     return function (dispatch) {\r\n//         axios\r\n//             .get('/api/current_user')\r\n//             .then(res => dispatch({ type: FETCH_USER, payload: res.data }));\r\n//     }\r\n// };\r\n\r\n\r\n//in the console if we print frpm types.js and payload:res above (instead of payload: res.data)\r\n//     {type: \"fetch_user\", payload: {…}}\r\n// >payload:\r\n// >config: {url: \"/api/current_user\", method: \"get\", headers: {…}, transformRequest: Array(1), transformResponse: Array(1), …}\r\n// >data:\r\n// googleId: \"113647293848158658638\"\r\n// __v: 0\r\n// _id: \"5ea059d433e043d876ccacfe\"\r\n// __proto__: Object\r\n// >headers: {content-length: \"77\", content-type: \"application/json; charset=utf-8\", date: \"Fri, 24 Apr 2020 16:39:20 GMT\", etag: \"W/\"4d-url65CqYEmULPTFCIYWew5NE81Y\"\", vary: \"Accept-Encoding\", …}\r\n// >request: XMLHttpRequest {readyState: 4, timeout: 0, withCredentials: false, upload: XMLHttpRequestUpload, onreadystatechange: ƒ, …}\r\n// >status: 200\r\n// >statusText: \"OK\"\r\n// __proto__: Object\r\n// >type: \"fetch_user\"\r\n//__proto__: Object","export const FETCH_USER = 'fetch_user';","import React, { Component } from 'react';\r\nimport StripeCheckout from 'react-stripe-checkout';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions'; //action creators are imported (files in actions folder)\r\n\r\nclass Payments extends Component{\r\n    render(){\r\n\r\n        return (\r\n            <StripeCheckout\r\n                name =\"Emaily\"\r\n                description=\"$5 or 5 email credits\"\r\n                amount={500}\r\n                token={token => this.props.handleToken(token)}\r\n                stripeKey={process.env.REACT_APP_STRIPE_KEY}\r\n            >\r\n                <button className=\"btn\">\r\n                    Add credits\r\n                </button>\r\n\r\n            </StripeCheckout>\r\n        \r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, actions) (Payments);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Payments from './Payments'\r\n\r\nclass Header extends Component {\r\n\r\n    renderContent() {\r\n        switch (this.props.auth) {\r\n            case null:\r\n                return; // returns nothng - no idea if user logs in/out\r\n            case false:\r\n                return <li><a href=\"/auth/google\">Login with Google</a></li>; //user is logged out\r\n            default:\r\n                return [\r\n                    <li key=\"1\" ><Payments /></li>,\r\n                    <li key=\"3\" style={{ margin: '0 10px' }}>\r\n                        Credits:{this.props.auth.credits}\r\n                    </li>,\r\n                    <li key=\"2\"><a href=\"/api/logout\">Logout</a></li>\r\n                ]; //user is logged in\r\n        }\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.props);// prints {auth: null, dispatch: ƒ} header js:6\r\n        //         type: \"fetch_user\", payload: {…}}\r\n        // payload: {_id: \"5ea059d433e043d876ccacfe\", googleId: \"113647293848158658638\", __v: 0}\r\n        // type: \"fetch_user\"\r\n        // __proto__: Object\r\n        //\r\n        // Header.js:6 \r\n        // {auth: {…}, dispatch: ƒ}\r\n        // auth: {_id: \"5ea059d433e043d876ccacfe\", googleId: \"113647293848158658638\", __v: 0}\r\n        // dispatch: ƒ (action)\r\n        //__proto__: Object\r\n        return (\r\n            <nav>\r\n                <div className=\"nav-wrapper\">\r\n                    <Link to={this.props.auth ? '/surveys' : '/'}\r\n                        className=\"left brand-logo\"\r\n                    >\r\n                        Emaily\r\n                     </Link>\r\n                    <ul className=\"right\">\r\n                        {this.renderContent()}\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\n// function mapStateToProps(state){\r\n//     return { auth: state.auth};\r\n// }\r\n\r\n\r\n//equivalent to\r\nfunction mapStateToProps({ auth }) {\r\n    return { auth };\r\n}\r\nexport default connect(mapStateToProps)(Header);","import React from 'react';\r\n\r\nconst Landing = () => {\r\n    return (\r\n        <div style={{ textAlign: 'center' }}>\r\n            <h1>\r\n                Emaily!\r\n            </h1>\r\n            collect feedback from your users\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Landing;","import React, { Component } from 'react';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport Header from './Header';\r\nimport Landing from './Landing';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions'; //action creators are imported (files in actions folder)\r\n\r\nconst Dashboard = () => <h2>Dashboard</h2>\r\nconst SurveyNew = () => <h2>SurveyNew</h2>\r\n\r\n\r\nclass App extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchUser();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <BrowserRouter>\r\n                    <div className=\"container\">\r\n                        <Header />\r\n                        <Route exact path=\"/\" component={Landing} />\r\n                        <Route exact path=\"/surveys\" component={Dashboard} />\r\n                        <Route path=\"/surveys/new\" component={SurveyNew} />\r\n                    </div>\r\n                </BrowserRouter>\r\n            </div>\r\n        );\r\n    }\r\n\r\n};\r\nexport default connect(null, actions)(App);","import { combineReducers } from 'redux';\r\nimport authReducer from './authReducer';\r\n\r\nexport default combineReducers({\r\n    auth: authReducer\r\n});","import { FETCH_USER } from '../actions/types';\r\n\r\nexport default function (state = null, action) {\r\n    //console.log(action);\r\n    //prints different action (4) including the one (type:fetch_user) below\r\n    //{type: \"fetch_user\", payload: {…}}\r\n    //     {type: \"fetch_user\", payload: {…}}\r\n    // >payload:\r\n    // >config: {url: \"/api/current_user\", method: \"get\", headers: {…}, transformRequest: Array(1), transformResponse: Array(1), …}\r\n    // >data:\r\n    // googleId: \"113647293848158658638\"\r\n    // __v: 0\r\n    // _id: \"5ea059d433e043d876ccacfe\"\r\n    // __proto__: Object\r\n    // >headers: {content-length: \"77\", content-type: \"application/json; charset=utf-8\", date: \"Fri, 24 Apr 2020 16:39:20 GMT\", etag: \"W/\"4d-url65CqYEmULPTFCIYWew5NE81Y\"\", vary: \"Accept-Encoding\", …}\r\n    // >request: XMLHttpRequest {readyState: 4, timeout: 0, withCredentials: false, upload: XMLHttpRequestUpload, onreadystatechange: ƒ, …}\r\n    // >status: 200\r\n    // >statusText: \"OK\"\r\n    // __proto__: Object\r\n    // >type: \"fetch_user\"\r\n    //__proto__: Object\r\n\r\n    switch (action.type) {\r\n        case FETCH_USER:\r\n            //return action.payload; // can return User model(User logs in) or empty string (we don't know if User logs in or out/not )\r\n            return action.payload || false; // can return User model(User logs in) or false (Use is not logged in )\r\n        // \"user model\"|| false =>user model returned\r\n        // \"\"|| false =>false rerurned\r\n\r\n        default:\r\n            return state; // by default state null (don#t know if user logs or not)\r\n    }\r\n}","import 'materialize-css/dist/css/materialize.min.css'\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport reduxThunk from 'redux-thunk'\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\nconst store = createStore(reducers, {}, applyMiddleware(reduxThunk));\r\n\r\nReactDOM.render(\r\n    <Provider store={store} ><App /></Provider>,\r\n    document.querySelector('#root')\r\n);\r\n\r\n//console.log('STRIPE KEY IS', process.env.REACT_APP_STRIPE_KEY);\r\n//console.log('Environment is', process.env.NODE_ENV);"],"sourceRoot":""}